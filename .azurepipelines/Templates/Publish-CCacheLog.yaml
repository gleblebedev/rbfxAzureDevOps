parameters:
- name: enableCache
  default: true
  type: boolean
- name: debugCache
  default: true
  type: boolean

steps:
  - pwsh: ccache --show-stats
    condition: and(succeeded(), eq(${{ parameters.enableCache }}, 'true'))
    displayName: 'CCache stats'

  - task: CopyFiles@2
    condition: and(succeeded(), and(eq(${{ parameters.enableCache }}, 'true'), eq(${{ parameters.debugCache }}, 'true')))
    inputs:
      sourceFolder: '$(buildFolder)'
      contents: '**/*.ccache-log'
      targetFolder: '$(Build.ArtifactStagingDirectory)/ccache-log/'
    displayName: 'Copy CCache logs'

  - task: PublishPipelineArtifact@1
    condition: and(succeeded(), and(eq(${{ parameters.enableCache }}, 'true'), eq(${{ parameters.debugCache }}, 'true')))
    displayName: 'Publish CCache logs'
    continueOnError: true 
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/ccache-log/'
      artifactName: 'ccache-log-$(Agent.JobName)'
